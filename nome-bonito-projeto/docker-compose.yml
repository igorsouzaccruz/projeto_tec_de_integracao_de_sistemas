version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - nomebonito-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - zookeeper
    restart: always
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - nomebonito-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=NomeBonitoCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - nomebonito-network

  producer:
    container_name: producer
    build:
      context: ./api1
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    restart: on-failure
    networks:
      - nomebonito-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - producer
    networks:
      - nomebonito-network

  consumer:
    container_name: consumer
    build:
      context: ./api2
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    networks:
      - nomebonito-network
      
networks:
  nomebonito-network: